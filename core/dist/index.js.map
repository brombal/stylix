{"version":3,"file":"index.js","sources":["../src/classifyProps.ts","../src/util/isPlainObject.ts","../src/plugins/cleanStyles.ts","../src/util/mapObjectRecursive.ts","../src/plugins/defaultUnits.ts","../src/plugins/flattenNestedStyles.ts","../src/plugins/mediaArrays.ts","../src/util/flatten.ts","../src/plugins/merge$css.ts","../src/plugins/propCasing.ts","../src/plugins/replace$$class.ts","../src/util/cloneDeep.ts","../src/util/walkRecursive.ts","../src/plugins/customProps.ts","../src/plugins/index.ts","../src/applyRules.ts","../src/StyleElement.tsx","../src/styleCollector.tsx","../src/util/useIsoLayoutEffect.ts","../src/StylixProvider.tsx","../src/getParentComponentName.ts","../src/stylesToRuleArray.ts","../src/util/hashString.ts","../src/useStyles.ts","../src/Stylix.tsx","../src/styled.tsx","../src/html-tags.ts","../src/elements.ts"],"sourcesContent":["import { useStylixContext } from './StylixProvider';\n\nexport function classifyProps(props: any, knownProps: Record<string, string>): [any, any] {\n  const styles = {} as any;\n  const other = {} as any;\n\n  for (const prop in props) {\n    // If prop is not a valid JSX prop, it must be a CSS selector\n    if (!isValidJSXProp(prop) || (isStyleProp(prop, knownProps) && isStyleValue(props[prop]))) {\n      styles[prop] = props[prop];\n    } else {\n      other[prop] = props[prop];\n    }\n  }\n\n  return [styles, other];\n}\n\nexport function useClassifyProps(props: any) {\n  const ctx = useStylixContext();\n  const [styles, other] = classifyProps(props, ctx.styleProps);\n  return [styles, other];\n}\n\n/**\n * Determines if `value` is a recognized CSS property (can be standard CSS or custom Stylix prop).\n */\nexport function isStyleProp(prop: string, knownProps: Record<string, string>): boolean {\n  return isValidJSXProp(prop) && simplifyStylePropName(prop) in knownProps;\n}\n\nexport function isValidJSXProp(value: string): boolean {\n  // Not an exact check, but mostly rules out complex css selectors\n  return /^[a-z$][a-z0-9_-]*$/i.test(value);\n}\n\nexport function simplifyStylePropName(value: string) {\n  return value.toLowerCase().replace(/[^a-z]/gi, '');\n}\n\n/**\n * Tries to determine if `value` is likely to be a valid CSS property value.\n * We can't be 100% sure, but this should catch most cases.\n * There is a check here to make sure React elements do not pass the test, as this\n * has turned out to be a common case where a property like 'content' means something\n * to a component, but is also a valid CSS property.\n */\nexport function isStyleValue(value: any): boolean {\n  return (\n    typeof value === 'function' ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    Array.isArray(value) ||\n    value === null ||\n    // Check for plain objects, and make sure it doesn't have the $$typeof property (react elements are never valid as style values)\n    (typeof value === 'object' && value.constructor === Object && !('$$typeof' in value))\n  );\n}\n","/**\n * Indicates that an object is most likely just an object literal.\n */\nexport function isPlainObject(obj: any): obj is Record<string, any> {\n  return typeof obj === 'object' && obj?.constructor === Object;\n}\n","import { isPlainObject } from '../util/isPlainObject';\nimport { StylixPlugin, StylixPluginFunctionContext } from './index';\n\nfunction cleanObject(object: any): any {\n  for (const key in object) {\n    const value = object[key];\n    if (value === null || value === undefined || value === '') delete object[key];\n    else if (isPlainObject(value) || Array.isArray(value)) {\n      cleanObject(value);\n      if (!Object.keys(value).length) delete object[key];\n    }\n  }\n  return object;\n}\n\n/**\n * Fixes casing and hyphenation on known style props\n */\nexport const cleanStyles: StylixPlugin = {\n  name: 'cleanStyles',\n  type: 'processStyles',\n  plugin(ctx: StylixPluginFunctionContext, styles: any) {\n    return cleanObject(styles);\n  },\n};\n","import { isPlainObject } from './isPlainObject';\n\n/**\n * Invokes `map` on each key/value pair in `object`. The key/value pair is deleted from the object and replaced by\n * merging in the object returned from `map`. Recursively descends into all object and array values.\n * The `map` function will receive the key, the value, the current object being mapped, and a context object.\n * The context object is a plain object that you can modify as needed. The value will persist to subsequent calls to\n * `map` on child properties of `value`.\n */\nexport function mapObjectRecursive(\n  object: any,\n  map: (\n    key: string | number,\n    value: any,\n    object: any,\n    context: any,\n  ) => Record<string | number, any> | undefined,\n  context: any = {},\n) {\n  const clone: any = Array.isArray(object) ? [] : {};\n\n  for (const k of Object.keys(object)) {\n    let key: string | number = k;\n    const value = object[key];\n\n    if (Array.isArray(object)) key = +key;\n    const contextClone = { ...context };\n    let result = map(key, value, object, contextClone);\n    if (typeof result !== 'undefined' && typeof result !== 'object' && !Array.isArray(result))\n      throw new Error(\n        'mapObjectRecursive: return value of map function must be undefined, object, or array!',\n      );\n    if (typeof result === 'undefined') {\n      result = { [key]: value };\n    }\n    for (const kk in result) {\n      let value = result[kk];\n      if (isPlainObject(value) || Array.isArray(value))\n        value = mapObjectRecursive(value, map, contextClone);\n      if (typeof value !== 'undefined') clone[kk] = value;\n    }\n  }\n\n  return clone;\n}\n","import { mapObjectRecursive } from '../util/mapObjectRecursive';\nimport { StylixPlugin } from './index';\n\nexport const defaultIgnoreUnits = [\n  'aspect-ratio',\n  'columns',\n  'column-count',\n  'fill-opacity',\n  'flex',\n  'flex-grow',\n  'flex-shrink',\n  'font-weight',\n  'line-height',\n  'opacity',\n  'orphans',\n  'stroke-opacity',\n  'widows',\n  'z-index',\n  'zoom',\n  'order',\n];\n\n/**\n * Adds unit (px, em, etc) to numeric values for any style properties not included in `ignoreProps`..\n */\nexport const defaultUnits = (unit = 'px', ignoreProps = defaultIgnoreUnits): StylixPlugin => {\n  return {\n    name: 'defaultUnits',\n    type: 'processStyles',\n    plugin(ctx, styles: any) {\n      return mapObjectRecursive(styles, defaultUnitsMap, { unit, ignoreProps });\n    },\n  };\n};\n\nconst defaultUnitsMap = (key: string | number, value: any, object :any, ctx:any) => {\n  if (typeof value === 'number' && !ctx.ignoreProps.includes(key as string)) {\n    return { [key]: String(value) + ctx.unit };\n  }\n};\n\nexport const defaultPixelUnits = defaultUnits();\n","import { isPlainObject } from '../util/isPlainObject';\nimport { StylixPlugin, StylixPluginFunctionContext } from './index';\n\nfunction flatten(styles: any, parent: any, selector: string, root: any, mediaRoot: any) {\n  for (let key in styles) {\n    const value = styles[key];\n    if (key.startsWith('@media')) {\n      // Flatten media queries, but nest them under the root object\n      root[key] = root[key] || {};\n      flatten(value, root[key], selector, root, root[key]);\n    } else if (key.startsWith('@keyframes')) {\n      // Add keyframe rules as-is directly to mediaRoot object\n      mediaRoot[key] = value;\n    } else if (key.startsWith('@container')) {\n      // Flatten container queries, but nest them under the mediaRoot object\n      mediaRoot[key] = mediaRoot[key] || {};\n      flatten(value, mediaRoot[key], selector, root, mediaRoot[key]);\n    } else if (isPlainObject(styles[key])) {\n      // Concatenate or replace & in selectors and then continue flattening styles\n      if (key.includes('&')) {\n        key = key.replace(/&/g, selector);\n      } else {\n        key = (selector + ' ' + key).trim();\n      }\n      parent[key] = parent[key] || {};\n      flatten(value, parent, key, root, mediaRoot);\n    } else {\n      // Selector is just a css property\n      parent[selector] = parent[selector] || {};\n      parent[selector][key] = styles[key];\n    }\n  }\n}\n\n/**\n * Flattens nested style objects that use `&` to reference parent class.\n */\nexport const flattenNestedStyles: StylixPlugin = {\n  name: 'flattenNestedStyles',\n  type: 'processStyles',\n  plugin(ctx: StylixPluginFunctionContext, styles: any) {\n    const flattened = {};\n    flatten(styles, flattened, '', flattened, flattened);\n    return flattened;\n  },\n};\n","import { isPlainObject } from '../util/isPlainObject';\nimport { mapObjectRecursive } from '../util/mapObjectRecursive';\nimport { StylixPlugin, StylixPluginFunctionContext } from './index';\n\n/**\n * Expands arrays as media queries.\n */\nexport const mediaArrays: StylixPlugin = {\n  name: 'mediaArrays',\n  type: 'processStyles',\n  plugin(ctx: StylixPluginFunctionContext, styles: any) {\n    if (!ctx.media) return styles;\n    // Fill out ditto values\n    styles = mapObjectRecursive(styles, mapDittoValues);\n    const mediaStyles: any = {};\n    let nonMediaStyles = styles;\n    for (const i in ctx.media) {\n      const mediaQuery = ctx.media[i];\n      if (!mediaQuery) {\n        nonMediaStyles = mapObjectRecursive(styles, mapNonMedia, { i });\n      } else {\n        mediaStyles[`@media ${mediaQuery}`] = mapObjectRecursive(styles, mapMediaStyles, { i });\n      }\n    }\n    return { ...nonMediaStyles, ...mediaStyles };\n  },\n};\n\nfunction mapDittoValues(key: string | number, value: any) {\n  if (Array.isArray(value)) {\n    for (const i in value) {\n      const v = value[i];\n      if (v === '@') value[i] = value[+i - 1];\n    }\n    return { [key]: value };\n  }\n}\n\nfunction mapNonMedia(key: string| number, value: any, object: any, context: any) {\n  if (Array.isArray(value)) {\n    return { [key]: value[context.i] };\n  }\n}\n\nfunction mapMediaStyles(key: string | number, value: any, object: any, context: any) {\n  if (typeof key === 'number') return; // Not possible, but here for TS\n  if (key.startsWith('@keyframes')) context.keyframes = true;\n  if (Array.isArray(value)) {\n    return { [key]: value[context.i] };\n  }\n  if (isPlainObject(value) || context.keyframes) {\n    return;\n  }\n  // delete key/value pair if primitive\n  return { [key]: undefined };\n}\n","/**\n * Flatten an array recursively.\n */\nexport function flatten<TEntryType>(array: unknown[]): TEntryType[] {\n  const result: unknown[] = [];\n  _flatten(array, result);\n  return result as TEntryType[];\n}\n\nfunction _flatten(array: unknown[], result: unknown[]): void {\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n    Array.isArray(value) ? _flatten(value as any, result) : result.push(value);\n  }\n}\n","import { flatten } from '../util/flatten';\nimport { isPlainObject } from '../util/isPlainObject';\nimport { StylixPlugin, StylixPluginFunctionContext } from './index';\n\n/**\n * Merges $css property into parent styles\n */\nexport const merge$css: StylixPlugin = {\n  name: 'merge$css',\n  type: 'processStyles',\n  plugin(ctx: StylixPluginFunctionContext, styles: any) {\n    const result = {};\n    _merge$css(styles, result);\n    return result;\n  },\n};\n\nexport function _merge$css(obj: any, ctx: any) {\n  if (!isPlainObject(obj)) return;\n  for (const key in obj) {\n    if (key === '$css') {\n      const $css = obj[key];\n      if (Array.isArray($css)) {\n        const flat$css = flatten($css);\n        for (const val of flat$css) {\n          _merge$css(val, ctx);\n        }\n      } else {\n        _merge$css($css, ctx);\n      }\n    } else {\n      let value = obj[key];\n      if (isPlainObject(value)) {\n        value = ctx[key] || {};\n        _merge$css(obj[key], value);\n      }\n      ctx[key] = value;\n    }\n  }\n}\n","import { simplifyStylePropName } from '../classifyProps';\nimport { mapObjectRecursive } from '../util/mapObjectRecursive';\nimport { StylixPlugin, StylixPluginFunctionContext } from './index';\n\n/**\n * Fixes casing and hyphenation on known style props\n */\nexport const propCasing: StylixPlugin = {\n  name: 'propCasing',\n  type: 'processStyles',\n  plugin(ctx: StylixPluginFunctionContext, styles: any) {\n    return mapObjectRecursive(styles, propCasingMap, { ctx });\n  },\n};\n\nfunction propCasingMap(key: string | number, value: any, object: any, context: any) {\n  if (typeof key !== 'string' || key === '&') return;\n  const simpleKey = simplifyStylePropName(key);\n  if (simpleKey && simpleKey in context.ctx.styleProps) {\n    return { [context.ctx.styleProps[simpleKey]]: value };\n  }\n}\n","import { mapObjectRecursive } from '../util/mapObjectRecursive';\nimport { StylixPlugin, StylixPluginFunctionContext } from './index';\n\n/**\n * Replaces $$class with hash in string values\n */\nexport const replace$$class: StylixPlugin = {\n  name: 'replace$$class',\n  type: 'processStyles',\n  plugin(ctx: StylixPluginFunctionContext, styles: any) {\n    return mapObjectRecursive(styles, replace$$classMap, { ctx });\n  },\n};\n\nfunction replace$$classMap(key: string | number, value: any, object: any, context: any) {\n  value = typeof value === 'string' ? value.replace('$$class', context.ctx.hash) : value;\n  key = typeof key === 'string' ? key.replace('$$class', context.ctx.hash) : key;\n  return { [key]: value };\n}\n","import { isPlainObject } from './isPlainObject';\n\n/**\n * Deeply clones a value.\n */\nexport function cloneDeep<T>(value: T): T {\n  if (!value || typeof value !== 'object') return value;\n  if (Array.isArray(value)) {\n    const clone: any = [];\n    for (let index = 0; index < value.length; ++index) {\n      clone.push(cloneDeep(value[index]));\n    }\n    return clone;\n  }\n  if (isPlainObject(value)) {\n    const clone: any = {};\n    for (const key in value) {\n      clone[key] = cloneDeep(value[key]);\n    }\n    return clone;\n  }\n  return value;\n}\n","import { cloneDeep } from './cloneDeep';\nimport { isPlainObject } from './isPlainObject';\n\n/**\n * Invokes a callback for each key/value pair in `object`, and continues recursively on each value that is an array or a\n * plain object. Returns `object`.\n * The `cb` function will receive the key, the value, the current object being mapped, and a context object.\n * The context object is a plain object that you can modify as needed. The value will persist to subsequent calls to\n * `map` on child properties of `value`.\n */\nexport function walkRecursive<T extends Record<string, any> = any>(\n  object: T,\n  cb: (key: string, value: any, currentObject: any, context: any) => void,\n  context?: any,\n): T {\n  const keys = Object.keys(object);\n  for (const key of keys) {\n    const value = object[key];\n    cb(key, value, object, context);\n    if (Array.isArray(value) || isPlainObject(value)) {\n      const contextClone = cloneDeep(context);\n      walkRecursive(value, cb, contextClone);\n    }\n  }\n  return object;\n}\n","import { isValidJSXProp, simplifyStylePropName } from '../classifyProps';\nimport { isPlainObject } from '../util/isPlainObject';\nimport { walkRecursive } from '../util/walkRecursive';\nimport { StylixPlugin, StylixPluginFunctionContext } from './index';\nimport { mediaArrays } from './mediaArrays';\n\nexport const customProps = (customProps: Record<string, any>): StylixPlugin[] => {\n  for (const key in customProps) {\n    customProps[simplifyStylePropName(key)] = customProps[key];\n  }\n\n  return [\n    {\n      name: 'customPropsInit',\n      type: 'initialize',\n      plugin(ctx: StylixPluginFunctionContext) {\n        for (const key in customProps) {\n          ctx.styleProps[simplifyStylePropName(key)] = key;\n        }\n      },\n    },\n    {\n      name: 'customPropsProcess',\n      type: 'processStyles',\n      before: mediaArrays,\n      plugin(ctx: StylixPluginFunctionContext, styles: any) {\n        return walkRecursive(styles, (key, value, object) => {\n          if (!isValidJSXProp(key) || isPlainObject(value)) return;\n\n          const simpleKey = simplifyStylePropName(key);\n          const propValue = customProps[simpleKey];\n          if (!propValue) return;\n\n          const objectClone = { ...object };\n          const keys = Object.keys(object);\n          const afterKeys = keys.slice(keys.indexOf(key) + 1);\n\n          const newStyles: any = {};\n          if (typeof propValue === 'object') {\n            if (value) Object.assign(newStyles, propValue);\n          } else if (typeof propValue === 'string') {\n            newStyles[propValue] = value;\n          } else if (typeof propValue === 'function') {\n            Object.assign(newStyles, propValue(value));\n          }\n          delete object[key];\n          Object.assign(object, newStyles);\n          for (const k of afterKeys) {\n            const val = objectClone[k];\n            delete object[k];\n            object[k] = val;\n          }\n        });\n      },\n    },\n  ];\n};\n","import { StylixContext, StylixPublicContext } from '../StylixProvider';\nimport { cleanStyles } from './cleanStyles';\nimport { defaultPixelUnits } from './defaultUnits';\nimport { flattenNestedStyles } from './flattenNestedStyles';\nimport { mediaArrays } from './mediaArrays';\nimport { merge$css } from './merge$css';\nimport { propCasing } from './propCasing';\nimport { replace$$class } from './replace$$class';\n\n/**\n * Stylix plugin function context object\n */\nexport type StylixPluginFunctionContext = StylixPublicContext & { hash: string | null };\n\n/**\n * Stylix plugin interface\n */\nexport interface StylixPlugin {\n  name: string;\n  type: 'initialize' | 'processStyles' | 'preprocessStyles';\n  plugin(ctx: StylixPluginFunctionContext, styles: any): any;\n  before?: StylixPlugin;\n  after?: StylixPlugin;\n  atIndex?: number;\n}\n\nexport function applyPlugins(\n  type: StylixPlugin['type'],\n  styles: any,\n  hash: string | null,\n  context: StylixContext,\n) {\n  const pluginContext = {\n    id: context.id,\n    devMode: context.devMode,\n    media: context.media,\n    stylesheet: context.stylesheet,\n    styleElement: context.styleElement,\n    styleProps: context.styleProps,\n    hash,\n  };\n\n  let processedStyles = styles;\n  for (const i in context.plugins) {\n    const plugin = context.plugins[i];\n    if (plugin.type === type) processedStyles = plugin.plugin(pluginContext, processedStyles);\n  }\n  return processedStyles;\n}\n\nexport { customProps } from './customProps';\n\nexport const defaultPlugins = {\n  merge$css,\n  mediaArrays,\n  propCasing,\n  flattenNestedStyles,\n  replace$$class,\n  defaultPixelUnits,\n  cleanStyles,\n};\n","import { StylixContext } from './StylixProvider';\n\nexport function flattenRules(ctx: StylixContext): string[] {\n  return Object.values(ctx.rules).flatMap((val) => val.rules);\n}\n\n/**\n * Applies rules from given StylixContext to the <style> element.\n */\nexport default function applyRules(ctx: StylixContext): void {\n  if (ctx.styleCollector) {\n    const flattenedRules = flattenRules(ctx);\n    ctx.styleCollector.length = 0;\n    ctx.styleCollector.push(...flattenedRules);\n    return;\n  }\n\n  if (ctx.ssr) return;\n\n  const supportsAdoptedStylesheets = 'adoptedStyleSheets' in document;\n\n  // If there's no style element, and we're in dev mode or legacy browser, create one\n  if (!ctx.styleElement && (ctx.devMode || !supportsAdoptedStylesheets)) {\n    ctx.styleElement = document.createElement('style');\n    ctx.styleElement.className = 'stylix';\n    if (ctx.id) ctx.styleElement.id = 'stylix-' + ctx.id;\n    document.head.appendChild(ctx.styleElement);\n  }\n\n  // If there's a style element, use its stylesheet\n  if (ctx.styleElement) ctx.stylesheet = ctx.styleElement.sheet as CSSStyleSheet;\n\n  // No stylesheet yet, create one\n  if (!ctx.stylesheet) {\n    ctx.stylesheet = new CSSStyleSheet();\n    document.adoptedStyleSheets.push(ctx.stylesheet);\n  }\n\n  if (ctx.devMode && ctx.styleElement) {\n    const flattenedRules = flattenRules(ctx);\n    ctx.styleElement.innerHTML = flattenedRules.join('\\n');\n  } else {\n    const stylesheet = ctx.stylesheet;\n    if (!stylesheet) return;\n    const flattenedRules = flattenRules(ctx);\n    if (stylesheet.replaceSync) {\n      try {\n        stylesheet.replaceSync(flattenedRules.join('\\n'));\n      } catch (e) {\n        // Errors are ignored, this just means that a browser doesn't support a certain CSS feature.\n        console.warn(e);\n      }\n    } else {\n      // Legacy method\n      while (stylesheet.rules?.length || stylesheet.cssRules?.length) {\n        stylesheet.deleteRule(0);\n      }\n      for (const i in flattenedRules)\n        try {\n          stylesheet.insertRule(flattenedRules[i], +i);\n        } catch (e) {\n          // Errors are ignored, this just means that a browser doesn't support a certain CSS feature.\n          console.warn(e);\n        }\n    }\n  }\n}\n","import React from 'react';\n\nimport { flattenRules } from './applyRules';\nimport { useStylixContext } from './StylixProvider';\n\nexport function StyleElement(\n  props: { styles: string[] } & Partial<React.HTMLProps<HTMLStyleElement>>,\n) {\n  const { styles, ...other } = props;\n  return (\n    <style type=\"text/css\" {...other} dangerouslySetInnerHTML={{ __html: styles.join('\\n') }} />\n  );\n}\n\nexport function RenderServerStyles(props: Partial<React.HTMLProps<HTMLStyleElement>>) {\n  const ctx = useStylixContext();\n  return <StyleElement styles={ctx.ssr ? flattenRules(ctx!) : []} {...props} />;\n}\n","import React, { createContext } from 'react';\n\nimport { StyleElement } from './StyleElement';\n\nexport interface StyleCollector {\n  collect: (element: React.ReactElement) => React.ReactElement;\n  render: React.FC<React.ComponentProps<'style'>>;\n  styles: string[];\n}\n\nexport const styleCollectorContext = createContext<string[] | undefined>(undefined);\n\nexport function createStyleCollector() {\n  const styles: string[] = [];\n  const collector: StyleCollector = {\n    collect: (element) => (\n      <styleCollectorContext.Provider value={styles}>{element}</styleCollectorContext.Provider>\n    ),\n    render: (props: React.ComponentProps<'style'>) => (\n      <StyleElement key={props.id || 'stylix'} styles={collector.styles} />\n    ),\n    styles,\n  };\n  collector.render.displayName = 'StylixStyleCollectorRenderer';\n  return collector;\n}\n\n// Collect your styles:\n// const styles = [];\n// ReactDOM.renderToString(\n//   <StylixSSR.StyleCollector styles={styles}>\n//     <App />\n//   </StylixSSR.StyleCollector>\n// );\n//\n// // Then render your styles:\n// <RenderServerStyles styles={styles} />\n","import { useLayoutEffect } from 'react';\n\nexport const detectSSR = () => !(typeof window !== 'undefined' && window.document?.head?.appendChild);\n\nexport default function useIsoLayoutEffect(\n  fn: () => void | (() => void),\n  deps?: unknown[],\n  runOnSsr?: boolean,\n  isSsr = detectSSR(),\n) {\n  if (isSsr) {\n    if (runOnSsr) return fn();\n  } else {\n    useLayoutEffect(fn, deps);\n  }\n}\n","import React, { createContext, useContext, useRef } from 'react';\n\nimport { simplifyStylePropName } from './classifyProps';\nimport cssProps from './css-props.json';\nimport { applyPlugins, defaultPlugins, StylixPlugin } from './plugins';\nimport { styleCollectorContext } from './styleCollector';\nimport { flatten } from './util/flatten';\nimport { detectSSR } from './util/useIsoLayoutEffect';\n\n/**\n * Stylix context\n *\n * The <StylixProvider> wrapper represents an \"instance\" of Stylix - a configuration, set of plugins, and reference to\n * the <style> element where css is output. All nodes contained within a <StylixProvider> element will share this\n * Stylix instance's configuration.\n *\n * See the README for more details.\n */\n\n// StylixProvider component props\ntype StylixProviderProps = {\n  id?: string;\n  devMode?: boolean;\n  plugins?: StylixPlugin[] | StylixPlugin[][];\n  styleElement?: HTMLStyleElement;\n  media?: string[];\n  ssr?: boolean;\n  children: any;\n};\n\n// StylixContext object interface\nexport type StylixContext = {\n  id: string;\n  devMode: boolean;\n  media: string[] | undefined;\n  plugins: StylixPlugin[];\n  stylesheet?: CSSStyleSheet;\n  styleElement?: HTMLStyleElement;\n  styleCollector?: string[];\n  rules: {\n    [key: string]: {\n      hash: string;\n      rules: string[];\n      refs: number;\n    };\n  };\n  styleProps: Record<string, string>;\n  ssr?: boolean;\n  cleanupRequest?: number;\n  requestApply: boolean;\n};\n\nexport type StylixPublicContext = Pick<\n  StylixContext,\n  'id' | 'devMode' | 'media' | 'stylesheet' | 'styleElement' | 'styleProps'\n>;\n\nconst defaultStyleProps: Record<string, string> = {};\nfor (const value of cssProps) {\n  defaultStyleProps[simplifyStylePropName(value)] = value;\n}\n\nfunction createStylixContext(userValues = {} as Partial<StylixProviderProps>) {\n  const ctx = {\n    id: userValues.id || Math.round(Math.random() * 10000).toString(10),\n    devMode: !!userValues.devMode,\n    styleProps: defaultStyleProps,\n    media: userValues.media,\n    styleElement: userValues.styleElement,\n    plugins: flatten<StylixPlugin>(Object.values(defaultPlugins)),\n    rules: {},\n    ssr: userValues.ssr ?? detectSSR(),\n    cleanupRequest: undefined,\n    requestApply: false,\n  } as StylixContext;\n\n  if (userValues.plugins?.length) {\n    const flatPlugins = flatten<StylixPlugin>(userValues.plugins);\n    for (const i in flatPlugins) {\n      const plugin = flatPlugins[i];\n      let pluginIndex = -1;\n      if (plugin.before && ctx.plugins.includes(plugin.before))\n        pluginIndex = ctx.plugins.indexOf(plugin.before);\n      if (plugin.after && ctx.plugins.includes(plugin.after))\n        pluginIndex = ctx.plugins.indexOf(plugin.after) + 1;\n      if (plugin.atIndex !== undefined) pluginIndex = plugin.atIndex;\n      if (pluginIndex === -1) ctx.plugins.push(plugin);\n      else ctx.plugins.splice(pluginIndex, 0, plugin);\n    }\n  }\n  applyPlugins('initialize', null, null, ctx);\n\n  return ctx;\n}\n\n// The React context object\nconst stylixContext = createContext<StylixContext | undefined>(undefined);\n\nlet defaultStylixContext: StylixContext | undefined = undefined;\n\n// Convenience wrapper hook that returns the current Stylix context\nexport function useStylixContext(): StylixContext {\n  const ctx = useContext(stylixContext);\n  if (!ctx) {\n    if (!defaultStylixContext) defaultStylixContext = createStylixContext();\n    return defaultStylixContext;\n  }\n  return ctx;\n}\n\nexport function StylixProvider({\n  id,\n  devMode,\n  plugins,\n  styleElement,\n  children,\n  ssr,\n}: StylixProviderProps): React.ReactElement {\n  const ctx = useRef<StylixContext>();\n  if (!ctx.current) ctx.current = createStylixContext({ id, devMode, plugins, styleElement, ssr });\n\n  ctx.current.styleCollector = useContext(styleCollectorContext);\n\n  return <stylixContext.Provider value={ctx.current}>{children}</stylixContext.Provider>;\n}\n","import React from 'react';\n\nexport function getParentComponentName() {\n  return (React as any)[\n    // yeah whatever\n    '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'\n  ]?.ReactDebugCurrentFrame?.getStackAddendum?.()\n    ?.split('\\n')\n    ?.map((line: any) => {\n      // Look for a component name like \"Component$123\", either at the start of the line (Firefox) or after \"at \" (Safari/Chrome)\n      const m = line.match(/^([A-Z][A-Za-z0-9$]*)|^\\s*at ([A-Z][A-Za-z0-9$]*)/);\n      return m?.[1] || m?.[2];\n    })\n    .filter(Boolean)\n    .reverse()\n    .slice(-1)[0];\n}\n","import { applyPlugins } from './plugins';\nimport { StylixContext } from './StylixProvider';\nimport { StylixObject } from './types';\nimport { isPlainObject } from './util/isPlainObject';\n\n/**\n * Converts a Stylix CSS object to an array of rules, suitable for passing to StyleSheet#insertRule.\n */\nexport default function stylesToRuleArray(\n  styles: StylixObject,\n  hash: string,\n  context: StylixContext,\n): string[] {\n  if (!styles || !Object.keys(styles).length) return [];\n  try {\n    const processedStyles = applyPlugins('processStyles', styles, hash, context);\n\n    // serialize to css rules array\n    const serialize = function serialize(selector: string, styles: StylixObject) {\n      const lines: string[] = [];\n      for (const key in styles) {\n        const value = styles[key];\n        if (isPlainObject(value)) lines.push(serialize(key, value));\n        else lines.push(`  ${key}: ${value};`);\n      }\n      return `${selector} {\\n${lines.join('\\n')} }`;\n    };\n\n    const result: string[] = [];\n    for (const key in processedStyles) {\n      const value = processedStyles[key];\n      result.push(serialize(key, value));\n    }\n    return result;\n  } catch (e: any) {\n    if (e.name && e.reason) {\n      console.error(\n        `${e.name}: ${e.reason}\\n`,\n        e.source.replace('\\n', ' ').substr(Math.max(0, e.column - 20), 100) + '\\n',\n        ' '.repeat(20) + '^',\n      );\n    } else {\n      console.error(e);\n    }\n    return [];\n  }\n}\n","/**\n * Cheap string hashing, suitable for generating css class names\n */\nexport function hashString(str: string): string {\n  let hash = 5381;\n  let i = str.length;\n  while (i-- > 0) hash = (hash * 33) ^ str.charCodeAt(i);\n  return 'stylix-' + (hash >>> 0).toString(36);\n}\n","import { useRef } from 'react';\n\nimport applyRules from './applyRules';\nimport { getParentComponentName } from './getParentComponentName';\nimport { applyPlugins } from './plugins';\nimport stylesToRuleArray from './stylesToRuleArray';\nimport { StylixContext, useStylixContext } from './StylixProvider';\nimport { StylixStyles } from './types';\nimport { hashString } from './util/hashString';\nimport useIsoLayoutEffect from './util/useIsoLayoutEffect';\n\nfunction cleanup(ctx: StylixContext): void {\n  if (typeof ctx.cleanupRequest !== 'undefined') return;\n\n  ctx.cleanupRequest = setTimeout(() => {\n    let deleted = false;\n\n    for (const i in ctx.rules) {\n      const rule = ctx.rules[i];\n      if (!rule.refs) {\n        delete ctx.rules[rule.hash];\n        deleted = true;\n      }\n    }\n    deleted && applyRules(ctx);\n\n    delete ctx.cleanupRequest;\n  }, 100) as any;\n}\n\nfunction compare(a: any, b: any): any {\n  if (a === b) return true;\n  if (typeof a !== typeof b) return false;\n  if (typeof a === 'object') {\n    if (Array.isArray(a) && Array.isArray(b) && a.length !== b.length) return false;\n    else if (Object.keys(a).length !== Object.keys(b).length) return false;\n    for (const key in b) {\n      if (!compare(a[key], b[key])) return false;\n    }\n  }\n  return a === b;\n}\n\n/**\n * Accepts a Stylix CSS object and returns a unique className based on the styles' hash.\n * The styles are registered with the Stylix context and will be applied to the document.\n * If `global` is false, provided styles will be nested within the generated classname.\n * Returns the className hash if enabled, or an empty string.\n */\nexport function useStyles(\n  styles: Record<string, any> | undefined,\n  options: { global?: boolean; disabled?: boolean; debugLabel?: string } = {\n    global: false,\n    disabled: false,\n  },\n): string {\n  const stylixCtx = useStylixContext();\n\n  const prevRef = useRef({ styles: {}, hash: '' } as any);\n\n  const changed = !compare(styles, prevRef.current.styles);\n\n  options.debugLabel ||= !!stylixCtx.devMode && getParentComponentName();\n  prevRef.current.styles = styles;\n\n  if (changed) {\n    // Preprocess styles with plugins\n    if (!options.disabled && styles && Object.keys(styles).length)\n      styles = applyPlugins('preprocessStyles', styles, null, stylixCtx);\n\n    // Serialize value and generate hash\n    const json = !options.disabled && styles && JSON.stringify(styles);\n    prevRef.current.hash =\n      json && json !== '{}' && json !== '[]'\n        ? hashString(JSON.stringify(stylixCtx.media || []) + json) +\n          (options.debugLabel ? '-' + options.debugLabel : '')\n        : '';\n  }\n\n  const { hash } = prevRef.current;\n\n  if (hash && changed && !stylixCtx.rules[hash]) {\n    // If not global styles, wrap original styles with classname\n    if (!options.global) styles = { ['.' + hash]: styles };\n    if (styles)\n      stylixCtx.rules[hash] = {\n        hash,\n        rules: stylesToRuleArray(styles, hash, stylixCtx),\n        refs: 1,\n      };\n    stylixCtx.requestApply = true;\n  }\n\n  // Apply styles if requested.\n  // This runs on every render. We utilize useLayoutEffect so that it runs *after* all the other\n  // renders have completed. stylixCtx.requestApply guards against multiple runs. This reduces the number of calls\n  // to applyRules(), but prevents styles potentially being added to the DOM after other components force the\n  // browser to compute styles.\n  useIsoLayoutEffect(\n    () => {\n      if (!stylixCtx.requestApply) return;\n      stylixCtx.requestApply = false;\n      applyRules(stylixCtx);\n    },\n    undefined,\n    true,\n    stylixCtx.ssr\n  );\n\n  // When hash changes, add/remove ref count\n  useIsoLayoutEffect(\n    () => {\n      if (!hash || !changed) return;\n\n      if (stylixCtx.rules[hash]) {\n        stylixCtx.rules[hash].refs++;\n      }\n\n      return () => {\n        stylixCtx.rules[hash].refs--;\n        cleanup(stylixCtx);\n      };\n    },\n    [hash],\n    false,\n    stylixCtx.ssr\n  );\n\n  return hash;\n}\n\nexport function useKeyframes(\n  keyframes: any,\n  options: { disabled?: boolean } = { disabled: false },\n) {\n  return useStyles({ '@keyframes $$class': keyframes }, { global: true, ...options });\n}\n\nexport function useGlobalStyles(\n  styles: StylixStyles,\n  options: { disabled?: boolean } = { disabled: false },\n) {\n  return useStyles(styles, { ...options, global: true });\n}\n","import React from 'react';\n\nimport { classifyProps } from './classifyProps';\nimport { useStylixContext } from './StylixProvider';\nimport { ComponentOrElement, Stylix$Component, Stylix$Props } from './types';\nimport { useStyles } from './useStyles';\n\nexport function _Stylix<ElType extends ComponentOrElement>(\n  props: Stylix$Props<ElType>,\n  ref: React.Ref<ElType>,\n) {\n  const { $el, $css, $disabled, className, children, ...rest } = props as any;\n\n  const ctx = useStylixContext();\n  const [styleProps, otherProps] = classifyProps(rest, ctx.styleProps);\n  if ($css) styleProps.$css = $css;\n  const hash = useStyles(styleProps, { disabled: $disabled });\n\n  const allProps = {\n    className: `${hash} ${className || ''}`.trim(),\n    ref: ref,\n    ...otherProps, // All other non-style props passed to <$> element\n  };\n\n  if (React.isValidElement($el)) {\n    const $elProps = {\n      ...($el.props as any),\n      /**\n       * `allProps` must override `$el.props` because the latter may contain default prop values provided by defaultProps.\n       * The expectation is that for <$ $el={<SomeComponent />} someComponentProp=\"my value\" />,\n       * the `someComponentProp` prop would override any default value specified by SomeComponent.defaultProps.\n       */\n      ...allProps,\n      className: ((($el.props as any).className || '') + ' ' + allProps.className).trim(),\n    };\n    return React.cloneElement($el, $elProps, ...(React.Children.toArray(children) || []));\n  }\n\n  return <$el {...allProps}>{children}</$el>;\n}\n\nconst Stylix: Stylix$Component = React.forwardRef(_Stylix) as unknown as Stylix$Component;\nStylix.displayName = 'Stylix';\nStylix.__isStylix = true;\n\nexport default Stylix;\n","import React from 'react';\n\nimport { _Stylix } from './Stylix';\nimport {\n  Extends,\n  HtmlOrComponent,\n  HtmlOrComponentProps,\n  MappedProperties,\n  StylixComponentMeta,\n  StylixProps,\n} from './types';\n\n/**\n * A component that accepts Stylix props in addition to TProps (Stylix props override TProps).\n */\nexport type StylixStyledComponentWithProps<TProps> = React.FC<Extends<TProps, StylixProps>> &\n  StylixComponentMeta;\n\n/**\n * A component that accepts Stylix props in addition to the props of TComponent (Stylix props override TComponent props).\n */\nexport type StylixStyledComponent<TComponent extends HtmlOrComponent> =\n  StylixStyledComponentWithProps<HtmlOrComponentProps<TComponent>>;\n\n/**\n * Gets a union of all the props of TComponent that conflict with css style properties.\n */\nexport type ConflictingStyleProps<TComponent extends HtmlOrComponent> = keyof StylixProps &\n  keyof HtmlOrComponentProps<TComponent>;\n\n/**\n * A map of props of TComponent that conflict with css style properties to the name of the prop that should be passed to the original component.\n */\ntype PropMap<TComponent extends HtmlOrComponent> = {\n  [key: string]: ConflictingStyleProps<TComponent>;\n};\n\n/**\n * A 'styled' component collects all style props and reduces them to a className which it passes as a prop to the\n * component. The new component accepts all styled props in addition to the original props of the component.\n * By default, all style props are consumed as styles, so if the original component accepts a prop that conflicts with a style prop, it will not be received by the component.\n * If you want a style prop to be passed directly to the original component (and maintain TS types from the original component), you\n * can specify it in the propMap.\n * must specify them in the config. You can also specify props to map from one name to another, so that the\n * resulting styled component can accept a non-style-prop name that is renamed and passed to the original component\n * as the prop that might otherwise conflict with a style prop.\n */\nexport function styled<\n  TComponent extends HtmlOrComponent,\n  TPropMap extends PropMap<TComponent> | undefined,\n>(\n  component: TComponent,\n  /**\n   * A style object to apply to the component.\n   */\n  styleProps?: StylixProps,\n  /**\n   * A map of new props to accept and the associated prop name to pass to the original component.\n   */\n  propMap?: TPropMap,\n): React.FC<\n  // Props include the props of TComponent, overridden by all style props, overridden by the values of propMap mapped to the types of their corresponding keys\n  Extends<\n    HtmlOrComponentProps<TComponent>,\n    StylixProps,\n    TPropMap extends PropMap<TComponent>\n      ? MappedProperties<HtmlOrComponentProps<TComponent>, TPropMap>\n      : object\n  >\n> &\n  StylixComponentMeta {\n  const Element: React.ElementType =\n    typeof component === 'string' // HTML element\n      ? (component as any)\n      : typeof component === 'function' && !('$$typeof' in component) && component.length === 2 // React function component with ref parameter\n        ? React.forwardRef(component)\n        : component; // React function component\n  const r: any = React.forwardRef((props: Record<string, any>, ref: React.Ref<unknown>) => {\n    props = { ...props }; // copy props so we can delete props that are consumed by Stylix\n    const $elProps: any = {};\n    if (propMap) {\n      for (const incomingProp in propMap) {\n        const outgoingProp = propMap[incomingProp];\n        $elProps[outgoingProp] = props[incomingProp];\n        delete props[incomingProp];\n      }\n    }\n    return _Stylix(\n      {\n        $el: <Element {...$elProps} />,\n        ...props,\n      },\n      ref as any,\n    );\n  });\n  r.displayName = `$.${\n    (component as React.FC).displayName ||\n    (component as React.FC).name ||\n    (component as string).toString?.() ||\n    'Unnamed'\n  }`;\n  r.__isStylix = true;\n  return r;\n}\n","export default [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'slot',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'sub',\n  'summary',\n  'sup',\n  'svg',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n] as const;\n","import htmlTags from './html-tags';\nimport { styled } from './styled';\nimport Stylix from './Stylix';\n\nfor (const i in htmlTags) {\n  // Types are specified in ./types.ts, so we don't care what they type of htmlTags[i] is.\n  // JSX.IntrinsicElements is a union of all HTML tags, so it is too complex for TypeScript to infer.\n  const tag = htmlTags[i] as any;\n  (Stylix as any)[tag] = styled(tag, undefined, {\n    htmlContent: 'content',\n    htmlTranslate: 'translate',\n  } as any);\n}\n"],"names":["flatten"],"mappings":"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"}