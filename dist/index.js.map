{"version":3,"file":"index.js","sources":["../src/classifyProps.ts","../src/util/isEmpty.ts","../src/util/isPlainObject.ts","../src/plugins/cleanStyles.ts","../src/util/mapObject.ts","../src/plugins/defaultUnits.ts","../src/plugins/hoistKeyframes.ts","../src/plugins/mediaObjects.ts","../src/plugins/mergeArrays.ts","../src/plugins/prepareStyles.ts","../src/plugins/propCasing.ts","../src/plugins/replace$$class.ts","../src/plugins/customProps.ts","../src/plugins/index.ts","../src/StyleElement.tsx","../src/styleCollector.tsx","../src/util/useIsoLayoutEffect.ts","../src/StylixProvider.tsx","../src/applyRules.ts","../src/getParentComponentName.ts","../src/stylesToRuleArray.ts","../src/useStyles.ts","../src/Stylix.tsx","../src/elements.tsx","../src/RenderServerStyles.tsx"],"sourcesContent":["export function classifyProps(props: any, knownProps: Record<string, string>): [any, any] {\n  const styles = {} as any;\n  const other = {} as any;\n\n  for (const prop in props) {\n    // If prop is not a valid JSX prop, it must be a CSS selector.\n    // If prop has a style prop name and the value is likely a style value, it's a style prop.\n    if (!isValidJSXProp(prop) || isStyleProp(prop, knownProps)) {\n      styles[prop] = props[prop];\n    } else {\n      other[prop] = props[prop];\n    }\n  }\n\n  return [styles, other];\n}\n\n/**\n * Determines if `value` is a recognized CSS property (can be standard CSS or custom Stylix prop).\n * If it is, the simplified prop name is returned. Otherwise, false is returned.\n */\nexport function isStyleProp(prop: unknown, knownProps: Record<string, string>): string | false {\n  if (isValidJSXProp(prop)) {\n    const simplified = simplifyStylePropName(prop);\n    return simplified in knownProps ? simplified : false;\n  }\n  return false;\n}\n\nexport function isValidJSXProp(value: unknown): value is string {\n  // Not an exact check, but mostly rules out complex css selectors\n  return typeof value === 'string' && /^[a-z$][a-z0-9_-]*$/i.test(value);\n}\n\nexport function simplifyStylePropName(value: string) {\n  return value.toLowerCase().replace(/[^a-z]/g, '');\n}\n","export function isEmpty(obj: unknown) {\n  if (!obj) return true;\n  if (Array.isArray(obj)) return obj.length === 0;\n  for (const _ in obj) return false;\n  if (typeof obj === 'object') return true;\n  return false;\n}\n","/**\n * Indicates that an object is most likely just an object literal.\n */\nexport function isPlainObject(value: any): value is Record<string, any> {\n  if (!value || typeof value !== 'object') return false;\n  return Object.getPrototypeOf(value) === Object.prototype;\n}\n","import { isEmpty } from '../util/isEmpty';\nimport { isPlainObject } from '../util/isPlainObject';\nimport type { StylixPlugin } from './index';\n\nexport function _cleanStyles(object: any): void {\n  for (const key in object) {\n    const value = object[key];\n    if (value === null || value === undefined || value === '' || value === false)\n      delete object[key];\n    else if (isPlainObject(value) || Array.isArray(value)) {\n      _cleanStyles(value);\n      if (isEmpty(value)) delete object[key];\n    }\n  }\n}\n\n/**\n * Removes null, undefined, and empty string values from style objects.\n */\nexport const cleanStyles: StylixPlugin = {\n  name: 'cleanStyles',\n  type: 'processStyles',\n  plugin(_ctx, styles) {\n    _cleanStyles(styles);\n    return styles;\n  },\n};\n","export type MapObjectFunction = (\n  key: string | number,\n  value: any,\n  source: unknown,\n  context: any,\n  mapRecursive: (value: unknown) => unknown,\n) => unknown;\n\n/**\n * Returns a new object or array, generated by invoking `map` on each key-value pair in `source` and merging the returned value into\n * the result. The return value should be an object or array (to match `source`), or undefined to omit the key-value pair from the result.\n *\n * If `source` is an object, Object.assign() will be used to merge the response into the result object.\n *\n * If `source` is an array, the returned array entries will be pushed onto the result array (i.e. it will be flattened, one level deep).\n *\n * The `map` function will receive the following arguments:\n * - The current key or index\n * - The current value\n * - The current object/array being mapped\n * - A context object. This is a plain object that you can modify as needed. The value will be shallow cloned for each key, and the clone\n *   will be passed into the `mapRecursive` method in order to persist it in recursive mapping.\n * - A `mapRecursive` function that can be used to recursively map nested objects or arrays. You can call this by passing the current value,\n *   which will run the same mapping function on the value and return the result. If the value is not an object or array, it will just\n *   return the value. The mapping function will receive the context object for the current key, and any modifications made to the context\n *   object will be persisted into the recursive call. This could be used, for example, to keep track of the current depth of the recursion\n *   or the full path of the current value.\n *\n * Example:\n *\n * ```ts\n * const value = {\n *   ignoreMe: null,\n *   string: 'value',\n *   object: {\n *     a: 1,\n *     b: 2,\n *   },\n *   array: [1, 2, 3, 4],\n * }\n * const result = mapObjectRecursive(value, (key, value, source, context) => {\n *   if (key === 'ignoreMe')\n *     return undefined; // will omit key from result\n *   if (typeof key === 'string' && typeof value === 'string')\n *     return { [key]: value + '-mapped' }; // will append '-mapped' to string values\n *   if (typeof key === 'string' && typeof value === 'number')\n *     return { [key]: value, [`${key}-mapped`]: value * 2 }; // will add a new key with the value doubled\n *   if (typeof value === 'object')\n *     return { [key]: value }; // will leave object unchanged\n *   if (Array.isArray(source) && typeof value === 'number')\n *     return [value, value * 2]; // will add the value and the value doubled to the array\n * });\n * // result:\n * // {\n * //   string: 'value-mapped',\n * //   object: {\n * //     a: 1,\n * //     'a-mapped': 2,\n * //     b: 2,\n * //     'b-mapped': 4,\n * //   },\n * //   array: [1, 2, 2, 4, 3, 6, 4, 8],\n * // }\n * ```\n */\nexport function mapObject<TSource>(\n  source: TSource,\n  map: MapObjectFunction,\n  context: any = {},\n): TSource {\n  if (typeof source !== 'object') return source;\n  const result = Array.isArray(source) ? ([] as unknown[]) : ({} as Record<string, unknown>);\n  for (const _key in source) {\n    const key = Array.isArray(source) ? +_key : _key;\n    const value = (source as any)[key];\n\n    const contextClone = { ...context };\n    const mapResult = map(key, value, source, contextClone, (value) =>\n      mapObject(value, map, contextClone),\n    );\n\n    if (typeof mapResult === 'undefined') continue;\n\n    if (Array.isArray(mapResult) && Array.isArray(source)) {\n      (result as unknown[]).push(...mapResult);\n      continue;\n    }\n\n    if (\n      typeof mapResult === 'object' &&\n      !Array.isArray(mapResult) &&\n      typeof source === 'object' &&\n      !Array.isArray(source)\n    ) {\n      Object.assign(result as object, mapResult);\n      continue;\n    }\n\n    throw new Error(\n      `mapObjectRecursive: return value of map function must be an object, array, or undefined, and must match the type of the source value. Type of source value was ${typeof source}, and type of returned value was ${typeof mapResult}.`,\n    );\n  }\n\n  return result as TSource;\n}\n","import { type MapObjectFunction, mapObject } from '../util/mapObject';\nimport type { StylixPlugin } from './index';\n\nexport const defaultIgnoreUnits = [\n  'aspect-ratio',\n  'columns',\n  'column-count',\n  'fill-opacity',\n  'flex',\n  'flex-grow',\n  'flex-shrink',\n  'font-weight',\n  'line-height',\n  'opacity',\n  'orphans',\n  'stroke-opacity',\n  'widows',\n  'z-index',\n  'zoom',\n  'order',\n];\n\n/**\n * Adds unit (px, em, etc) to numeric values for any style properties not included in `ignoreProps`..\n */\nexport const defaultUnits = (unit = 'px', ignoreProps = defaultIgnoreUnits): StylixPlugin => {\n  return {\n    name: 'defaultUnits',\n    type: 'processStyles',\n    plugin(_ctx, styles) {\n      return mapObject(styles, defaultUnitsMap, { unit, ignoreProps });\n    },\n  };\n};\n\nconst defaultUnitsMap: MapObjectFunction = (key, value, _object, ctx, mapRecursive) => {\n  if (typeof value === 'number' && !ctx.ignoreProps.includes(key as string)) {\n    return { [key]: String(value) + ctx.unit };\n  }\n  return { [key]: mapRecursive(value) };\n};\n\nexport const defaultPixelUnits = defaultUnits();\n","import { isPlainObject } from '../util/isPlainObject';\nimport type { StylixPlugin } from './index';\n\nfunction _hoistKeyframes(styles: any, root: any) {\n  for (const key in styles) {\n    const value = styles[key];\n    if (key.startsWith('@keyframes')) {\n      // Add keyframe rules as-is directly to root object\n      root[key] = value;\n      if (styles !== root) delete styles[key];\n    } else if (isPlainObject(value)) {\n      // Recursively flatten nested styles\n      _hoistKeyframes(value, root);\n    }\n  }\n  return styles;\n}\n\n/**\n * Hoists @keyframe declarations to root of styles object.\n */\nexport const hoistKeyframes: StylixPlugin = {\n  name: 'hoistKeyframes',\n  type: 'processStyles',\n  plugin(_ctx, styles) {\n    return _hoistKeyframes(styles, styles);\n  },\n};\n","import { isStyleProp } from '../classifyProps';\nimport type { StylixObject, StylixStyles } from '../index';\nimport type { StylixPlugin, StylixPluginFunctionContext } from './index';\n\ntype OpaqueMediaStyles = { __opaqueMediaStyles: true };\n\nexport type StylixMediaValue = {\n  [key: string]: OpaqueMediaStyles | StylixMediaValue;\n};\n\ntype StylixMediaFunc = (styles: OpaqueMediaStyles) => StylixMediaValue;\n\nexport type StylixMediaDefinition = Record<string, StylixMediaFunc>;\n\n/**\n * Expands media objects using the media definitions from the Stylix context.\n */\nexport const mediaObjects: StylixPlugin = {\n  name: 'mediaObjects',\n  type: 'processStyles',\n  plugin: mediaObjectsPlugin,\n};\n\nfunction mediaObjectsPlugin(ctx: StylixPluginFunctionContext, styles: StylixStyles): StylixObject {\n  if (!ctx.media) return styles as StylixObject;\n  return processMediaStyles(ctx.media, ctx.styleProps, styles);\n}\n\nexport function processMediaStyles(\n  mediaDef: StylixMediaDefinition,\n  styleProps: Record<string, string>,\n  styles: any,\n): any {\n  if (!styles || typeof styles !== 'object') return styles;\n\n  // If styles is an array, just recursively map it\n  if (Array.isArray(styles)) {\n    return styles.map((style: any) => processMediaStyles(mediaDef, styleProps, style));\n  }\n\n  mediaDef.default ||= (styles: any) => styles;\n\n  const result = { default: [] } as Record<string, any[]>;\n\n  for (const styleKey in styles) {\n    const styleValue = styles[styleKey];\n\n    if (isStyleProp(styleKey, styleProps)) {\n      if (typeof styleValue !== 'object') {\n        // Regular style prop\n        result.default.push({ [styleKey]: styleValue });\n        continue;\n      }\n\n      // An object for a style prop is definitely a media object\n      for (const mediaKey in styleValue) {\n        result[mediaKey] ||= [];\n        result[mediaKey].push(\n          mediaDef[mediaKey]({\n            // process recursively\n            [styleKey]: processMediaStyles(mediaDef, styleProps, styleValue[mediaKey]),\n          } as OpaqueMediaStyles),\n        );\n      }\n      continue;\n    }\n\n    if (styleKey in mediaDef) {\n      result[styleKey] ||= [];\n      result[styleKey].push(\n        mediaDef[styleKey](\n          // process recursively\n          processMediaStyles(mediaDef, styleProps, styleValue),\n        ),\n      );\n      continue;\n    }\n\n    // Key is a selector, just process recursively and add to plain styles\n    result.default.push({ [styleKey]: processMediaStyles(mediaDef, styleProps, styleValue) });\n  }\n\n  const results = Object.values(result);\n  return results.length === 1 ? results[0] : results.length === 0 ? null : results;\n}\n","import type { StylixObject, StylixStyles } from '../types';\nimport { isEmpty } from '../util/isEmpty';\nimport type { StylixPlugin } from './index';\n\n/**\n * Merges arrays into flat objects, recursively throughout the styles object.\n */\nexport const mergeArrays: StylixPlugin = {\n  name: 'mergeArrays',\n  type: 'processStyles',\n  plugin: (_ctx, styles) => _mergeArrays(styles),\n};\n\nexport function _mergeArrays(obj: StylixStyles) {\n  if (Array.isArray(obj)) return reduceArray(obj);\n  return reduceObjectProperties(obj);\n}\n\nfunction reduceArray(arr: StylixStyles[]): StylixObject | undefined {\n  arr = arr.flat();\n  let target = arr[0] as StylixObject;\n\n  if (Array.isArray(target)) {\n    target = reduceArray(target) as StylixObject;\n  }\n\n  for (let i = 1; i < arr.length; i++) {\n    let source = arr[i] as StylixObject | undefined;\n\n    if (Array.isArray(source)) {\n      source = reduceArray(source);\n    }\n\n    // ignore falsy values\n    if (typeof source === 'undefined') continue;\n\n    // if both values are primitives, the source value takes precedence\n    if (typeof target !== 'object' && typeof source !== 'object') {\n      target = source;\n      continue;\n    }\n\n    // if target is primitive but source is object, replace target with source\n    if (typeof target !== 'object') {\n      target = source;\n      continue;\n    }\n\n    for (const key in source) {\n      const value = source[key] as StylixStyles;\n      // if the key does not exist in target, just add it\n      if (!(key in target)) target[key] = value;\n      // else, if the target value is an object or array:\n      else if (typeof target[key] === 'object') {\n        // if the source value is an object or array, convert target to array if necessary and push source value\n        if (typeof value === 'object') {\n          if (!Array.isArray(target[key])) target[key] = [target[key]];\n          (target[key] as StylixStyles[]).push(value);\n        }\n        // else, ignore the source value (it's primitive; object values take precedence)\n      }\n      // else, target value is primitive, overwrite target value\n      else {\n        target[key] = value;\n      }\n    }\n  }\n\n  return reduceObjectProperties(target);\n}\n\nconst _reduced = Symbol('reduced');\n\nfunction reduceObjectProperties(\n  obj: Exclude<StylixStyles, StylixStyles[]>,\n): StylixObject | undefined {\n  if (!obj || isEmpty(obj)) return undefined;\n  if (typeof obj !== 'object') return obj;\n  if (obj?.[_reduced as any]) {\n    return obj;\n  }\n\n  for (const k in obj) {\n    if (!obj[k] || typeof obj[k] !== 'object') continue;\n    obj[k] = _mergeArrays(obj[k] as StylixStyles);\n  }\n\n  Object.defineProperty(obj, _reduced as any, { value: true, enumerable: false });\n  return obj;\n}\n","import { isPlainObject } from '../util/isPlainObject';\nimport type { StylixPlugin } from './index';\n\n/**\n * Removes null, undefined, and empty string values from style objects.\n */\nexport const prepareStyles: StylixPlugin = {\n  name: 'prepareStyles',\n  type: 'preprocessStyles',\n  plugin(_ctx, styles) {\n    while (Array.isArray(styles) && styles.length === 1) styles = styles[0];\n    if (Array.isArray(styles) && !styles.length) return null;\n    if (isPlainObject(styles) && Object.values(styles).every((v) => v === undefined)) return null;\n    return styles;\n  },\n};\n","import type { StylixContext } from '../StylixProvider';\nimport { isStyleProp } from '../classifyProps';\nimport { type MapObjectFunction, mapObject } from '../util/mapObject';\nimport type { StylixPlugin } from './index';\n\n/**\n * Fixes casing and hyphenation on known style props\n */\nexport const propCasing: StylixPlugin = {\n  name: 'propCasing',\n  type: 'processStyles',\n  plugin(ctx, styles) {\n    return mapObject(styles, propCasingMap, { ctx });\n  },\n};\n\nconst propCasingMap: MapObjectFunction = (\n  key,\n  value,\n  _object,\n  context: { ctx: StylixContext },\n  mapRecursive,\n) => {\n  if (typeof key !== 'string' || key === '&') return { [key]: mapRecursive(value) };\n  const simpleKey = isStyleProp(key, context.ctx.styleProps);\n  if (simpleKey) {\n    return { [context.ctx.styleProps[simpleKey]]: mapRecursive(value) };\n  }\n  return { [key]: mapRecursive(value) };\n};\n","import { type MapObjectFunction, mapObject } from '../util/mapObject';\nimport type { StylixPlugin, StylixPluginFunctionContext } from './index';\n\n/**\n * Replaces $$class with class name in string values\n */\nexport const replace$$class: StylixPlugin = {\n  name: 'replace$$class',\n  type: 'processStyles',\n  plugin(ctx, styles) {\n    return mapObject(styles, replace$$classMap, { ctx });\n  },\n};\n\nconst replace$$classMap: MapObjectFunction = (\n  key,\n  value,\n  _object,\n  context: { ctx: StylixPluginFunctionContext },\n  mapRecursive,\n) => {\n  value =\n    typeof value === 'string'\n      ? value.replace('$$class', context.ctx.className || '')\n      : mapRecursive(value);\n  key = typeof key === 'string' ? key.replace('$$class', context.ctx.className || '') : key;\n  return { [key]: value };\n};\n","import { isValidJSXProp, simplifyStylePropName } from '../classifyProps';\nimport type { StylixStyles } from '../types';\nimport { isPlainObject } from '../util/isPlainObject';\nimport { mapObject } from '../util/mapObject';\nimport type { StylixPlugin } from './index';\nimport { mergeArrays } from './mergeArrays';\n\nexport function _customPropsProcess(styles: StylixStyles, customProps: Record<string, any>): any {\n  return mapObject(styles, (key, value, source, _ctx, mapRecursive) => {\n    if (!isValidJSXProp(key) || isPlainObject(value))\n      return Array.isArray(source) ? [mapRecursive(value)] : { [key]: mapRecursive(value) };\n\n    const simpleKey = simplifyStylePropName(key);\n    const propValue = customProps[simpleKey];\n    if (!propValue) return { [key]: mapRecursive(value) };\n\n    if (typeof propValue === 'object') {\n      if (value) return mapRecursive(propValue);\n      return undefined;\n    }\n    if (typeof propValue === 'string') {\n      return { [propValue]: mapRecursive(value) };\n    }\n    if (typeof propValue === 'function') {\n      return mapRecursive(propValue(value));\n    }\n\n    return { [key]: mapRecursive(value) };\n  });\n}\n\nexport const customProps = (customProps: Record<string, any>): StylixPlugin[] => {\n  for (const key in customProps) {\n    customProps[simplifyStylePropName(key)] = customProps[key];\n  }\n\n  return [\n    {\n      name: 'customPropsInit',\n      type: 'initialize',\n      plugin(ctx) {\n        for (const key in customProps) {\n          ctx.styleProps[simplifyStylePropName(key)] = key;\n        }\n      },\n    },\n    {\n      name: 'customPropsProcess',\n      type: 'processStyles',\n      before: mergeArrays,\n      plugin(_ctx, styles) {\n        return _customPropsProcess(styles, customProps);\n      },\n    },\n  ];\n};\n","import type { StylixContext, StylixPublicContext } from '../StylixProvider';\nimport type { StylixStyles } from '../types';\nimport { cleanStyles } from './cleanStyles';\nimport { defaultPixelUnits } from './defaultUnits';\nimport { hoistKeyframes } from './hoistKeyframes';\nimport { mediaObjects } from './mediaObjects';\nimport { mergeArrays } from './mergeArrays';\nimport { prepareStyles } from './prepareStyles';\nimport { propCasing } from './propCasing';\nimport { replace$$class } from './replace$$class';\n\n/**\n * Stylix plugin function context object\n */\nexport type StylixPluginFunctionContext = StylixPublicContext & { className: string | null };\n\n/**\n * Stylix plugin interface\n */\nexport type StylixPlugin = {\n  name: string;\n  before?: StylixPlugin;\n  after?: StylixPlugin;\n  atIndex?: number;\n} & (\n  | {\n      name: string;\n      type: 'initialize';\n      plugin(ctx: StylixPluginFunctionContext): void;\n    }\n  | {\n      type: 'processStyles' | 'preprocessStyles';\n      plugin(ctx: StylixPluginFunctionContext, styles: StylixStyles): StylixStyles;\n    }\n);\n\nexport function applyPlugins(\n  type: 'initialize',\n  styles: null,\n  className: null,\n  context: StylixContext,\n): void;\n\nexport function applyPlugins(\n  type: 'processStyles' | 'preprocessStyles',\n  styles: StylixStyles,\n  className: string | null,\n  context: StylixContext,\n): StylixStyles;\n\nexport function applyPlugins(\n  type: StylixPlugin['type'],\n  styles: StylixStyles | null,\n  className: string | null,\n  context: StylixContext,\n): StylixStyles {\n  const pluginContext: StylixPluginFunctionContext = {\n    id: context.id,\n    devMode: context.devMode,\n    media: context.media,\n    stylesheet: context.stylesheet,\n    styleElement: context.styleElement,\n    styleProps: context.styleProps,\n    className,\n  };\n\n  let processedStyles: StylixStyles = styles || {};\n  for (const i in context.plugins) {\n    const plugin = context.plugins[i];\n    if (plugin.type === type)\n      processedStyles = plugin.plugin(pluginContext, processedStyles) as StylixStyles;\n  }\n  return processedStyles;\n}\n\nexport { customProps } from './customProps';\n\nexport const defaultPlugins: StylixPlugin[] = [\n  prepareStyles,\n  mediaObjects,\n  mergeArrays,\n  propCasing,\n  hoistKeyframes,\n  replace$$class,\n  defaultPixelUnits,\n  cleanStyles,\n];\n","import type { HTMLProps } from './elements';\n\nexport function StyleElement(props: { styles: string[] } & Partial<HTMLProps<'style'>>) {\n  const { styles, ...other } = props;\n  return (\n    <style type=\"text/css\" {...other} dangerouslySetInnerHTML={{ __html: styles.join('\\n') }} />\n  );\n}\n","import type React from 'react';\nimport { createContext } from 'react';\n\nimport { StyleElement } from './StyleElement';\n\nexport interface StyleCollector {\n  collect: (element: React.ReactElement) => React.ReactElement;\n  render: React.FC<React.ComponentProps<'style'>>;\n  styles: string[];\n}\n\nexport const styleCollectorContext = createContext<string[] | undefined>(undefined);\n\nexport function createStyleCollector() {\n  const styles: string[] = [];\n  const collector: StyleCollector = {\n    collect: (element) => (\n      <styleCollectorContext.Provider value={styles}>{element}</styleCollectorContext.Provider>\n    ),\n    render: (props: React.ComponentProps<'style'>) => (\n      <StyleElement key={props.id || 'stylix'} styles={collector.styles} />\n    ),\n    styles,\n  };\n  collector.render.displayName = 'StylixStyleCollectorRenderer';\n  return collector;\n}\n\n// Collect your styles:\n// const styles = [];\n// ReactDOM.renderToString(\n//   <StylixSSR.StyleCollector styles={styles}>\n//     <App />\n//   </StylixSSR.StyleCollector>\n// );\n//\n// // Then render your styles:\n// <RenderServerStyles styles={styles} />\n","import { useLayoutEffect } from 'react';\n\nexport const detectSSR = () =>\n  !(typeof window !== 'undefined' && window.document?.head?.appendChild);\n\nexport default function useIsoLayoutEffect(\n  fn: () => void | (() => void),\n  deps?: unknown[],\n  runOnSsr?: boolean,\n  isSsr = detectSSR(),\n) {\n  if (isSsr) {\n    if (runOnSsr) return fn();\n  } else {\n    useLayoutEffect(fn, deps);\n  }\n}\n","import type React from 'react';\nimport { createContext, useContext, useEffect, useRef } from 'react';\n\nimport { classifyProps, simplifyStylePropName } from './classifyProps';\nimport cssProps from './css-props.json';\nimport { type StylixPlugin, applyPlugins, defaultPlugins } from './plugins';\nimport type { StylixMediaDefinition } from './plugins/mediaObjects';\nimport { styleCollectorContext } from './styleCollector';\nimport { detectSSR } from './util/useIsoLayoutEffect';\n\n/**\n * Stylix context\n *\n * The <StylixProvider> wrapper represents an \"instance\" of Stylix - a configuration, set of plugins, and reference to\n * the <style> element where css is output. All nodes contained within a <StylixProvider> element will share this\n * Stylix instance's configuration.\n *\n * See the README for more details.\n */\n\n// StylixProvider component props\ntype StylixProviderProps = {\n  id?: string;\n  devMode?: boolean;\n  plugins?: StylixPlugin[] | StylixPlugin[][];\n  styleElement?: HTMLStyleElement;\n  media?: StylixMediaDefinition;\n  ssr?: boolean;\n  children: any;\n};\n\n// StylixContext object interface\nexport type StylixContext = {\n  id: string;\n  devMode: boolean;\n  media: StylixMediaDefinition | undefined;\n  plugins: StylixPlugin[];\n  stylesheet?: CSSStyleSheet;\n  styleElement?: HTMLStyleElement;\n  styleCollector?: string[];\n  styleCounter: number;\n  rules: {\n    [key: string]:\n      | undefined\n      | {\n          className: string;\n          rules: string[];\n          refs: number;\n        };\n  };\n  styleProps: Record<string, string>;\n  ssr?: boolean;\n  cleanupRequest?: number;\n  requestApply: boolean;\n\n  classifyProps(props: Record<string, unknown>): [Record<string, unknown>, Record<string, unknown>];\n};\n\nexport type StylixPublicContext = Pick<\n  StylixContext,\n  'id' | 'devMode' | 'media' | 'stylesheet' | 'styleElement' | 'styleProps'\n>;\n\nlet defaultStyleProps: Record<string, string> | undefined = undefined;\n\nexport function createStylixContext(userValues = {} as Partial<StylixProviderProps>) {\n  if (!defaultStyleProps) {\n    defaultStyleProps = {};\n    for (const value of cssProps) {\n      defaultStyleProps[simplifyStylePropName(value)] = value;\n    }\n  }\n\n  const ctx = {\n    id: userValues.id || '$default',\n    devMode: !!userValues.devMode,\n    styleProps: defaultStyleProps,\n    media: userValues.media,\n    styleElement: userValues.styleElement,\n    plugins: defaultPlugins.flat(),\n    styleCounter: 0,\n    rules: {},\n    ssr: userValues.ssr ?? detectSSR(),\n    cleanupRequest: undefined,\n    requestApply: false,\n\n    classifyProps(props: Record<string, unknown>) {\n      const [styles, other] = classifyProps(props, this.styleProps);\n      return [styles, other];\n    },\n  } as StylixContext;\n\n  if (userValues.plugins?.length) {\n    const flatPlugins = userValues.plugins.flat();\n    for (const i in flatPlugins) {\n      const plugin = flatPlugins[i];\n      let pluginIndex = -1;\n      if (plugin.before && ctx.plugins.includes(plugin.before))\n        pluginIndex = ctx.plugins.indexOf(plugin.before);\n      else if (plugin.after && ctx.plugins.includes(plugin.after))\n        pluginIndex = ctx.plugins.indexOf(plugin.after) + 1;\n      else if (plugin.atIndex !== undefined) pluginIndex = plugin.atIndex;\n\n      if (pluginIndex === -1) ctx.plugins.push(plugin);\n      else ctx.plugins.splice(pluginIndex, 0, plugin);\n    }\n  }\n  applyPlugins('initialize', null, null, ctx);\n\n  return ctx;\n}\n\n// The React context object\nconst stylixContext = createContext<StylixContext | undefined>(undefined);\n\nlet defaultStylixContext: StylixContext | undefined = undefined;\n\n/**\n * Gets the current Stylix context.\n */\nexport function useStylixContext(): StylixContext {\n  const ctx = useContext(stylixContext);\n  if (!ctx) {\n    if (!defaultStylixContext) defaultStylixContext = createStylixContext();\n    return defaultStylixContext;\n  }\n  return ctx;\n}\n\nexport function StylixProvider({\n  id,\n  devMode,\n  plugins,\n  media,\n  styleElement,\n  children,\n  ssr,\n}: StylixProviderProps): React.ReactElement {\n  const ctx = useRef<StylixContext | null>(null);\n  if (!ctx.current)\n    ctx.current = createStylixContext({ id, devMode, plugins, media, styleElement, ssr });\n\n  ctx.current.styleCollector = useContext(styleCollectorContext);\n\n  // When the component is unmounted, remove the style element, if any\n  useEffect(() => {\n    return () => {\n      ctx.current?.styleElement?.remove();\n    };\n  }, []);\n\n  return <stylixContext.Provider value={ctx.current}>{children}</stylixContext.Provider>;\n}\n","import type { StylixContext } from './StylixProvider';\n\nexport function flattenRules(ctx: StylixContext): string[] {\n  return Object.values(ctx.rules)\n    .flatMap((val) => (val && val.refs > 0 ? val.rules : []))\n    .filter(Boolean);\n}\n\n/**\n * Applies rules from given StylixContext to the <style> element.\n */\nexport default function applyRules(ctx: StylixContext): void {\n  if (ctx.styleCollector) {\n    const flattenedRules = flattenRules(ctx);\n    ctx.styleCollector.length = 0;\n    ctx.styleCollector.push(...flattenedRules);\n    return;\n  }\n\n  if (ctx.ssr) return;\n\n  const supportsAdoptedStylesheets = 'adoptedStyleSheets' in document;\n\n  // If there's no style element, and we're in dev mode or legacy browser, create one\n  if (!ctx.styleElement && (ctx.devMode || !supportsAdoptedStylesheets)) {\n    ctx.styleElement = document.createElement('style');\n    ctx.styleElement.className = 'stylix';\n    if (ctx.id) ctx.styleElement.id = `stylix-${ctx.id}`;\n    document.head.appendChild(ctx.styleElement);\n  }\n\n  if (ctx.devMode && ctx.styleElement) {\n    const flattenedRules = flattenRules(ctx);\n    ctx.styleElement.innerHTML = flattenedRules.join('\\n');\n  } else {\n    // If there's a style element, use its stylesheet\n    if (ctx.styleElement) ctx.stylesheet = ctx.styleElement.sheet as CSSStyleSheet;\n\n    // Still no stylesheet yet, create one\n    if (!ctx.stylesheet) {\n      ctx.stylesheet = new CSSStyleSheet();\n      if (supportsAdoptedStylesheets) {\n        document.adoptedStyleSheets.push(ctx.stylesheet);\n      } else if (ctx.stylesheet.ownerNode) {\n        document.head.appendChild(ctx.stylesheet.ownerNode);\n      }\n    }\n\n    const stylesheet = ctx.stylesheet;\n\n    const flattenedRules = flattenRules(ctx);\n    if (stylesheet.replaceSync) {\n      try {\n        stylesheet.replaceSync(flattenedRules.join('\\n'));\n      } catch (e) {\n        // Errors are ignored, this just means that a browser doesn't support a certain CSS feature.\n        console.warn(e);\n      }\n    } else {\n      // Legacy method\n      while (stylesheet.rules?.length || stylesheet.cssRules?.length) {\n        stylesheet.deleteRule(0);\n      }\n      for (const i in flattenedRules)\n        try {\n          stylesheet.insertRule(flattenedRules[i], +i);\n        } catch (e) {\n          // Errors are ignored, this just means that a browser doesn't support a certain CSS feature.\n          console.warn(e);\n        }\n    }\n  }\n}\n","import React from 'react';\n\nexport function getParentComponentName(): string | undefined {\n  const internals = (React as any).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  const stack = internals?.ReactDebugCurrentFrame?.getStackAddendum?.()?.split('\\n') || [];\n  for (const line of stack) {\n    // Look for a component name like \"Component$123\", either at the start of the line (Firefox) or after \"at \" (Safari/Chrome)\n    const m = line.trim().match(/^(?:at )?([A-Z][A-Za-z0-9$\\.]*)/);\n    const res = m?.[1] && m[1] !== 'Stylix' ? m[1] : undefined;\n    if (res) return res;\n  }\n}\n","import type { StylixContext } from './StylixProvider';\nimport { applyPlugins } from './plugins';\nimport type { StylixObject } from './types';\nimport { isEmpty } from './util/isEmpty';\nimport { isPlainObject } from './util/isPlainObject';\n\n/**\n * Serialize selector and styles to css rule string\n */\nfunction serialize(selector: string, styles: StylixObject) {\n  const lines: string[] = [];\n  for (const key in styles) {\n    const value = styles[key];\n    if (isPlainObject(value)) lines.push(serialize(key, value));\n    else lines.push(`  ${key}: ${value};`);\n  }\n  return `${selector} {\\n${lines.join('\\n')} }`;\n}\n\n/**\n * Converts a Stylix CSS object to an array of rules, suitable for passing to StyleSheet#insertRule.\n */\nexport default function stylesToRuleArray(\n  styles: StylixObject,\n  className: string,\n  context: StylixContext,\n): string[] {\n  if (isEmpty(styles)) return [];\n  try {\n    const processedStyles = applyPlugins(\n      'processStyles',\n      styles,\n      className,\n      context,\n    ) as StylixObject;\n\n    const result: string[] = [];\n    for (const key in processedStyles) {\n      const value = processedStyles[key] as StylixObject;\n      result.push(serialize(key, value));\n    }\n    return result;\n  } catch (e: any) {\n    if (e.name && e.reason) {\n      console.error(\n        `${e.name}: ${e.reason}\\n`,\n        `${e.source.replace('\\n', ' ').substring(Math.max(0, e.column - 20), Math.max(0, e.column - 20) + 100)}\\n`,\n        `${' '.repeat(20)}^`,\n      );\n    } else {\n      console.error(e);\n    }\n    return [];\n  }\n}\n","import { useRef } from 'react';\n\nimport { type StylixContext, useStylixContext } from './StylixProvider';\nimport applyRules from './applyRules';\nimport { getParentComponentName } from './getParentComponentName';\nimport { applyPlugins } from './plugins';\nimport stylesToRuleArray from './stylesToRuleArray';\nimport type { StylixObject, StylixStyles } from './types';\nimport { isEmpty } from './util/isEmpty';\nimport useIsoLayoutEffect from './util/useIsoLayoutEffect';\n\nfunction cleanup(ctx: StylixContext): void {\n  if (typeof ctx.cleanupRequest !== 'undefined') return;\n\n  const doCleanup = () => {\n    for (const i in ctx.rules) {\n      const rule = ctx.rules[i];\n      if (!rule || rule.refs <= 0) {\n        delete ctx.rules[i];\n      }\n    }\n    ctx.cleanupRequest = undefined;\n  };\n\n  if (ctx.devMode) {\n    doCleanup();\n  } else {\n    ctx.cleanupRequest = setTimeout(doCleanup, 100) as any;\n  }\n}\n\n/**\n * Accepts a Stylix CSS object and returns a unique className.\n * The styles are registered with the Stylix context and will be applied to the document.\n * If `global` is false, provided styles will be nested within the generated classname.\n * Returns the className if enabled, or an empty string.\n */\nexport function useStyles(\n  styles: StylixStyles,\n  options: { global?: boolean; debugLabel?: string } = { global: false },\n): string {\n  const stylixCtx = useStylixContext();\n\n  const prevStylesJson = useRef('');\n\n  // Preprocess styles with plugins\n  if (styles && !isEmpty(styles))\n    styles = applyPlugins('preprocessStyles', styles, null, stylixCtx);\n\n  let stylesJson = styles && !isEmpty(styles) ? JSON.stringify(styles) : '';\n  if (stylesJson && options.global) stylesJson = `global:${stylesJson}`;\n\n  const changed = stylesJson !== prevStylesJson.current;\n  prevStylesJson.current = stylesJson;\n\n  options.debugLabel ||= stylixCtx.devMode ? getParentComponentName() : '';\n\n  if (stylesJson && !stylixCtx.rules[stylesJson]) {\n    stylixCtx.styleCounter++;\n    const className = `stylix-${(stylixCtx.styleCounter).toString(36)}${options.debugLabel ? `-${options.debugLabel}` : ''}`;\n    // If not global styles, wrap original styles with classname\n    if (!options.global) styles = { [`.${className}`]: styles };\n    stylixCtx.rules[stylesJson] = {\n      className,\n      rules: stylesToRuleArray(styles as StylixObject, className, stylixCtx),\n      refs: 0,\n    };\n  }\n\n  if (changed) stylixCtx.requestApply = true;\n\n  // When json changes, add/remove ref count\n  const ruleSet = stylixCtx.rules[stylesJson];\n  if (stylesJson && changed && ruleSet) {\n    ruleSet.refs++;\n  }\n\n  // Apply styles if requested.\n  // This runs on every render. We utilize useLayoutEffect so that it runs *after* all the other\n  // renders have completed. stylixCtx.requestApply guards against multiple runs. This reduces the number of calls\n  // to applyRules(), but prevents styles potentially being added to the DOM after other components force the\n  // browser to compute styles.\n  useIsoLayoutEffect(\n    () => {\n      if (!stylixCtx.requestApply) return;\n      stylixCtx.requestApply = false;\n      applyRules(stylixCtx);\n    },\n    undefined,\n    true,\n    stylixCtx.ssr,\n  );\n\n  useIsoLayoutEffect(\n    () => {\n      if (!stylesJson || !changed) return;\n\n      return () => {\n        const ruleSet = stylixCtx.rules[stylesJson];\n        if (!ruleSet) return;\n        ruleSet.refs--;\n        if (ruleSet.refs <= 0) stylixCtx.rules[stylesJson] = undefined;\n        cleanup(stylixCtx);\n      };\n    },\n    [stylesJson],\n    false,\n    stylixCtx.ssr,\n  );\n\n  return stylixCtx.rules[stylesJson]?.className || '';\n}\n\nexport function useKeyframes(keyframes: any) {\n  return useStyles({ '@keyframes $$class': keyframes }, { global: true });\n}\n\nexport function useGlobalStyles(\n  styles: StylixStyles,\n  options: { disabled?: boolean } = { disabled: false },\n) {\n  return useStyles(styles, { ...options, global: true });\n}\n","import React from 'react';\nimport { useStylixContext } from './StylixProvider';\nimport type { StylixProps } from './types';\nimport { useStyles } from './useStyles';\nimport { isEmpty } from './util/isEmpty';\n\n/**\n * Additional properties on the Stylix ($) component and its html component properties (`<$.div>`, etc).\n */\nexport type StylixComponentMeta = {\n  displayName?: string;\n  __isStylix: true;\n};\n\n/**\n * Defines the static meta properties and the HTML elements on the `$` object ($.div, $.span, etc).\n */\ntype Stylix$ComponentExtras = StylixComponentMeta & {\n  [key in keyof React.JSX.IntrinsicElements]: React.FC<\n    StylixProps<unknown, React.JSX.IntrinsicElements[key]> & {\n      htmlContent?: string;\n      htmlTranslate?: 'yes' | 'no';\n    }\n  >;\n};\n\nexport type StylixRenderFn<TProps = any> = (\n  className: string | undefined,\n  props: TProps,\n) => React.ReactNode;\n\n/**\n * The props for the Stylix ($) component when using the $render prop.\n */\ntype Stylix$renderProp = StylixProps &\n  Record<string, unknown> & {\n    $el?: never;\n    $render: StylixRenderFn;\n    children?: React.ReactNode | React.ReactNode[];\n  };\n\n/**\n * The props for the Stylix ($) component when using the children render function.\n */\ntype Stylix$childrenProp = StylixProps &\n  Record<string, unknown> & {\n    $el?: never;\n    $render?: never;\n    children: StylixRenderFn;\n  };\n\n/**\n * The props for the Stylix ($) component when using the $el prop as a component.\n */\ntype Stylix$elAsComponentProp<TComponent extends React.ElementType> =\n  (TComponent extends React.ElementType<infer P> ? StylixProps<object, P> : never) & {\n    $el: TComponent;\n    $render?: never;\n    children?: React.ReactNode | React.ReactNode[];\n  };\n\n/**\n * The props for the Stylix ($) component when using the $el prop.\n */\ntype Stylix$elAsElementProp = StylixProps &\n  Record<string, unknown> & {\n    $render?: never;\n    $el: React.ReactElement;\n    children?: React.ReactNode | React.ReactNode[];\n  };\n\n/**\n * Props for the Stylix ($) component\n */\nexport type Stylix$Props<TComponent extends React.ElementType> =\n  | Stylix$elAsComponentProp<TComponent>\n  | Stylix$elAsElementProp\n  | Stylix$renderProp\n  | Stylix$childrenProp;\n\n/**\n * Type of main Stylix component ($).\n */\nexport interface Stylix$Component extends Stylix$ComponentExtras {\n  <TComponent extends React.ElementType>(props: Stylix$Props<TComponent>): React.ReactNode;\n}\n\nexport function _Stylix<TElement extends React.ElementType>(\n  props: Stylix$Props<TElement>,\n  ref: React.Ref<TElement>,\n) {\n  const { $el, $render, $css, className: outerClassName, children, ...rest } = props;\n\n  const ctx = useStylixContext();\n  const [styleProps, otherProps] = ctx.classifyProps(rest);\n\n  let styles = [];\n  if (!isEmpty(styleProps)) styles.push(styleProps);\n  if (!isEmpty($css)) styles.push($css);\n  if (styles.length === 1) styles = styles[0];\n  const stylixClassName = useStyles(styles);\n\n  const className = `${stylixClassName} ${outerClassName || ''}`.trim() || undefined;\n\n  if (React.isValidElement($el)) {\n    const $elProps = {\n      ...($el.props as any),\n      ref,\n      /**\n       * `allProps` must override `$el.props` because the latter may contain default prop values provided by defaultProps.\n       * The expectation is that for <$ $el={<SomeComponent />} someComponentProp=\"my value\" />,\n       * the `someComponentProp` prop would override any default value specified by SomeComponent.defaultProps.\n       */\n      ...otherProps,\n      className: `${($el.props as any).className || ''} ${className || ''}`.trim() || undefined,\n    };\n    return React.cloneElement(\n      $el,\n      $elProps,\n      ...(React.Children.toArray(children as React.ReactNode) || []),\n    );\n  }\n\n  if ($el) {\n    const Component = $el as React.FC<any>;\n    return (\n      <Component className={className} ref={ref} {...otherProps}>\n        {children}\n      </Component>\n    );\n  }\n\n  if ($render) {\n    return $render(className || undefined, { children, ...otherProps, ...(ref ? { ref } : null) });\n  }\n\n  if (children) {\n    if (typeof children !== 'function') {\n      throw new Error('Stylix: invalid component usage: children must be a function');\n    }\n    return (children as StylixRenderFn)(className || undefined, {\n      ...otherProps,\n      ...(ref ? { ref } : null),\n    });\n  }\n\n  throw new Error('Stylix: invalid stylix component usage: must provide $el, $render, or children');\n}\n\nexport const Stylix: Stylix$Component = React.forwardRef(\n  _Stylix as any,\n) as unknown as Stylix$Component;\nStylix.displayName = 'Stylix';\nStylix.__isStylix = true;\n","import React from 'react';\nimport { Stylix } from './Stylix';\n\nconst htmlTags = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'slot',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'sub',\n  'summary',\n  'sup',\n  'svg',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n];\n\n/**\n * Gets the props of a given HTML tag.\n */\nexport type HTMLProps<TTag extends keyof React.JSX.IntrinsicElements> =\n  React.JSX.IntrinsicElements[TTag];\n\nfor (const i in htmlTags) {\n  const Tag = htmlTags[i];\n  (Stylix as any)[Tag] = React.forwardRef(({ htmlContent, htmlTranslate, ...props }: any, ref) => (\n    <Stylix\n      $render={(className, props) => (\n        <Tag\n          className={className}\n          content={htmlContent}\n          translate={htmlTranslate}\n          ref={ref}\n          {...props}\n        />\n      )}\n      {...props}\n    />\n  ));\n  (Stylix as any)[Tag].__isStylix = true;\n  (Stylix as any)[Tag].displayName = `$.${Tag}`;\n}\n","import { StyleElement } from './StyleElement';\nimport { useStylixContext } from './StylixProvider';\nimport { flattenRules } from './applyRules';\nimport type { HTMLProps } from './elements';\n\nexport function RenderServerStyles(props: Partial<HTMLProps<'style'>>) {\n  const ctx = useStylixContext();\n  return <StyleElement styles={ctx.ssr ? flattenRules(ctx) : []} {...props} />;\n}\n"],"names":["_jsx"],"mappings":"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"}